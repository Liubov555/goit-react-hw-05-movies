{"version":3,"file":"static/js/519.5b50586b.chunk.js","mappings":"+SAGMA,EAAM,mCACNC,EAAW,gCAOJC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,sCACsBD,EADtB,oBADM,cACvBI,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,UAChBF,EADgB,gCACgBD,EADhB,kBAC6BO,EAD7B,oBADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOdG,EAAY,mCAAG,WAAMC,GAAN,uFACDN,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCQ,EADD,oBACeT,EADf,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOZK,EAAY,mCAAG,WAAMD,GAAN,uFACDN,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCQ,EADD,4BACuBT,EADvB,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,KAAKM,MAJG,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACJN,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCQ,EADD,4BACuBT,EADvB,2BADI,cACrBI,EADqB,yBAIpBA,EAASC,KAAKQ,SAJM,2CAAH,qD,8ECD5B,UAlCqB,WACjB,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAoBH,GACfI,MAAK,SAAAhB,GACFW,EAAeX,EAClB,IACAiB,MAAMC,QAAQC,IACtB,GAAE,CAACP,IAECF,EAIL,OACI,8BACKA,EAAYU,OAAS,GAClB,wBACKV,EAAYW,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACb,sCACY,uBAAID,KACZ,uBAAIC,MAFCnB,EADI,OAQrB,gDAIf,C","sources":["API/Api.jsx","pages/ReviewsMovie/ReviewsMovie.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst KEY = '2e428f3596d4dd04f259d44f78cbc4cd';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst URL_POSTER = 'https://image.tmdb.org/t/p/w500';\nconst URL_BACKDROP = 'https://image.tmdb.org/t/p/original/';\nconst LOGO_URL = `https://image.tmdb.org/t/p/w185`;\n\nexport { KEY, BASE_URL, URL_POSTER, URL_BACKDROP, LOGO_URL };\n\nexport const getTrandingMovies = async () => {\n    const response = await axios.get(\n        `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMovieById = async id => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMovieCast = async id => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../API/Api';\n\nconst ReviewsMovie = () => {\n    const [reviewMovie, setReviewMovie] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        API.getMovieReviews(movieId)\n            .then(data => {\n                setReviewMovie(data);\n            })\n            .catch(console.log);\n    }, [movieId]);\n\n    if (!reviewMovie) {\n        return;\n    }\n\n    return (\n        <>\n            {reviewMovie.length > 0 ? (\n                <ul>\n                    {reviewMovie.map(({ id, author, content }) => (\n                        <li key={id}>\n                            Author: <b>{author}</b>\n                            <p>{content}</p>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <div>Reviews not found</div>\n            )}\n        </>\n    );\n};\n\nexport default ReviewsMovie;\n"],"names":["KEY","BASE_URL","getTrandingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","useState","reviewMovie","setReviewMovie","movieId","useParams","useEffect","API","then","catch","console","log","length","map","author","content"],"sourceRoot":""}