{"version":3,"file":"static/js/341.34940e7c.chunk.js","mappings":"+SAGMA,EAAM,mCACNC,EAAW,gCAOJC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,sCACsBD,EADtB,oBADM,cACvBI,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,UAChBF,EADgB,gCACgBD,EADhB,kBAC6BO,EAD7B,oBADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOdG,EAAY,mCAAG,WAAMC,GAAN,uFACDN,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCQ,EADD,oBACeT,EADf,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOZK,EAAY,mCAAG,WAAMD,GAAN,uFACDN,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCQ,EADD,4BACuBT,EADvB,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,KAAKM,MAJG,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACJN,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCQ,EADD,4BACuBT,EADvB,2BADI,cACrBI,EADqB,yBAIpBA,EAASC,KAAKQ,SAJM,2CAAH,qD,2JCrCfC,EAAQC,EAAAA,EAAAA,GAAH,kDAILC,EAAOD,EAAAA,EAAAA,GAAH,kD,GAIGA,EAAAA,EAAAA,EAAH,oG,QCLXE,EAAkB,CACpB,CAAEC,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,UAAWC,KAAM,YAqB7BF,EAAgBG,UAAY,CACxBC,SAAUC,IAAAA,MAAgB,CACtBC,SAAUD,IAAAA,OAAAA,WACVE,OAAQF,IAAAA,OAAAA,WACRG,IAAKH,IAAAA,OAAAA,WACLI,KAAMJ,IAAAA,OACNK,MAAOL,IAAAA,OACRM,YAGP,I,MAAA,EA5BmB,SAAC,GAAkB,IAAhBP,EAAe,EAAfA,SAClB,OACI,4BACI,SAACP,EAAD,uCACA,wBACKG,EAAgBY,KAAI,gBAAGX,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACjB,SAACH,EAAD,WACI,SAAC,KAAD,CAAMc,GAAIZ,EAAMS,MAAO,CAAEI,KAAMV,GAA/B,SACKF,KAFED,EADM,OAQzB,oBAGX,ECxBYc,EAAWjB,EAAAA,EAAAA,IAAH,sECiErB,EA/DkB,SAAC,GAAe,IAAbkB,EAAY,EAAZA,MAEbC,EAQAD,EARAC,MACAC,EAOAF,EAPAE,KACAC,EAMAH,EANAG,SACAC,EAKAJ,EALAI,OACAC,EAIAL,EAJAK,aACAC,EAGAN,EAHAM,eACAC,EAEAP,EAFAO,YACAC,EACAR,EADAQ,aAGEC,EAAYC,KAAKC,MAAqB,GAAfH,GAKvBI,EAASL,EAAW,yCACcA,GAHpC,uGAMJ,OACI,iCACI,UAACR,EAAD,YACI,gBACIc,IAAKD,EACLE,IAAKb,GAASC,EACda,MAAM,SAEV,4BACI,0BACKd,GAASC,EADd,MACuBI,GAAkBD,GAAcW,MAAM,EAAG,GADhE,QAIA,wCAAgBP,EAAhB,QAEA,sCACA,uBAAIN,KAEJ,oCACA,uBAAIC,EAAOR,KAAI,qBAAGM,IAAH,IAAoBe,KAAK,eAGhD,oBAGX,E,SC9CYC,EAAYpC,EAAAA,EAAAA,IAAH,kDAITqC,GAAWrC,EAAAA,EAAAA,GAAOsC,EAAAA,GAAPtC,CAAH,gSCOrB,EAXqB,SAAC,GAAsB,IAApBuC,EAAmB,EAAnBA,aACpB,OACI,SAACH,EAAD,WACI,UAACC,EAAD,CAAUtB,GAAIwB,EAAd,WACI,SAAC,MAAD,CAAkBC,KAAM,KAD5B,cAMX,E,SC4BD,EAhCqB,WAAO,IAAD,IACvB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOvB,EAAP,KAAcwB,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFJ,EAAY,qBADDM,EAAAA,EAAAA,MACajC,aAAZ,aAAG,EAAgBI,YAAnB,QAA2B,IAU7C,IARA8B,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAiBJ,GACZK,MAAK,SAAA1D,GACFoD,EAASpD,EACZ,IACA2D,MAAMC,QAAQC,IACtB,GAAE,CAACR,IAECzB,EAIL,OACI,iCACI,SAAC,EAAD,CAAcqB,aAAcA,KAC5B,SAAC,EAAD,CAAWrB,MAAOA,KAClB,SAAC,EAAD,CAAYZ,SAAUiC,KAEtB,SAAC,EAAAa,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,QAIf,C","sources":["API/Api.jsx","components/Additional/Additional.styled.jsx","components/Additional/Additional.jsx","components/InfoMovie/InfoMovie.styled.jsx","components/InfoMovie/InfoMovie.jsx","components/GoBackButton/GoBackButton.styled.jsx","components/GoBackButton/GoBackButton.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst KEY = '2e428f3596d4dd04f259d44f78cbc4cd';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst URL_POSTER = 'https://image.tmdb.org/t/p/w500';\nconst URL_BACKDROP = 'https://image.tmdb.org/t/p/original/';\nconst LOGO_URL = `https://image.tmdb.org/t/p/w185`;\n\nexport { KEY, BASE_URL, URL_POSTER, URL_BACKDROP, LOGO_URL };\n\nexport const getTrandingMovies = async () => {\n    const response = await axios.get(\n        `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMovieById = async id => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMovieCast = async id => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h4`\n    margin-bottom: 10px;\n`;\n\nexport const Item = styled.li`\n    margin-bottom: 10px;\n`;\n\nexport const Link = styled.a`\n    color:  #888888;\n    &:hover, :focus{\n        color: #000000;\n    }\n`;","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Title, Item } from './Additional.styled';\n\n\nconst AdditionalItems = [\n    { href: 'cast', text: 'Cast' },\n    { href: 'reviews', text: 'Reviews' },\n];\n\nconst Additional = ({ location }) => {\n    return (\n        <div>\n            <Title>Addititonal information</Title>\n            <ul>\n                {AdditionalItems.map(({ href, text }) => (\n                    <Item key={href}>\n                        <Link to={href} state={{ from: location }}>\n                            {text}\n                        </Link>\n                    </Item>\n                ))}\n            </ul>\n            <hr />\n        </div>\n    );\n};\n\nAdditionalItems.propTypes = {\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n        search: PropTypes.string.isRequired,\n        key: PropTypes.string.isRequired,\n        hash: PropTypes.string,\n        state: PropTypes.bool,\n    }).isRequired,\n};\n\nexport default Additional;","import styled from \"@emotion/styled\";\n\nexport const FilmCard = styled.div`\n    display: flex;\n    align-items: center;\n`","import PropTypes from 'prop-types';\nimport { FilmCard } from './InfoMovie.styled';\n\n\nconst InfoMovie = ({ movie }) => {\n    const {\n        title,\n        name,\n        overview,\n        genres,\n        release_date,\n        first_air_date,\n        poster_path,\n        vote_average,\n    } = movie;\n\n    const userScore = Math.round(vote_average * 10);\n\n    const imgNotFound =\n        'https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png';\n\n    const imgUrl = poster_path\n        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n        : imgNotFound;\n\n    return (\n        <>\n            <FilmCard>\n                <img\n                    src={imgUrl}\n                    alt={title || name}\n                    width=\"200\"\n                />\n                <div>\n                    <h2>\n                        {title || name} ({(first_air_date || release_date).slice(0, 4)})\n                    </h2>\n\n                    <p>User Score: {userScore}%</p>\n\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n\n                    <h3>Genres</h3>\n                    <p>{genres.map(({ name }) => name).join(', ')}</p>\n                </div>\n            </FilmCard>\n            <hr />\n        </>\n    );\n};\n\nInfoMovie.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string,\n        name: PropTypes.string,\n        overview: PropTypes.string.isRequired,\n        genres: PropTypes.arrayOf(\n            PropTypes.shape({ name: PropTypes.string.isRequired })\n        ),\n        release_date: PropTypes.string.isRequired,\n        first_air_date: PropTypes.string,\n        poster_path: PropTypes.string,\n        vote_average: PropTypes.number.isRequired,\n    }).isRequired,\n};\n\nexport default InfoMovie;\n","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\n\nexport const Container = styled.div`\n    margin-bottom: 10px;\n`;\n\nexport const LinkItem = styled(Link)`\n    display: inline-flex;\n    align-items: center;\n    padding: 3px 10px;\n    background-color: blue;\n    font-size: 14px;\n    color: white;\n\n    border-radius: 5px;\n    border: 1px solid lightcoral;\n\n    &:hover, :focus{\n        color: yellow;\n    }\n`;\n\n\n","// import { Link } from 'react-router-dom';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { Container, LinkItem } from './GoBackButton.styled';\n\nconst GoBackButton = ({ backLinkHref }) => {\n    return (\n        <Container>\n            <LinkItem to={backLinkHref}>\n                <BsArrowLeftShort size={20} />\n                Go back\n            </LinkItem>\n        </Container>\n    );\n};\n\nexport default GoBackButton;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../API/Api';\nimport Additional from '../components/Additional/Additional';\nimport InfoMovie from '../components/InfoMovie/InfoMovie';\nimport GoBackButton from '../components/GoBackButton/GoBackButton';\nimport Loading from '../components/Loading/Loading';\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/';\n\n    useEffect(() => {\n        API.getMovieById(movieId)\n            .then(data => {\n                setMovie(data);\n            })\n            .catch(console.log);\n    }, [movieId]);\n\n    if (!movie) {\n        return;\n    }\n\n    return (\n        <>\n            <GoBackButton backLinkHref={backLinkHref} />\n            <InfoMovie movie={movie} />\n            <Additional location={backLinkHref} />\n\n            <Suspense fallback={<Loading />}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};\n\nexport default MovieDetails;"],"names":["KEY","BASE_URL","getTrandingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","Title","styled","Item","AdditionalItems","href","text","propTypes","location","PropTypes","pathname","search","key","hash","state","isRequired","map","to","from","FilmCard","movie","title","name","overview","genres","release_date","first_air_date","poster_path","vote_average","userScore","Math","round","imgUrl","src","alt","width","slice","join","Container","LinkItem","Link","backLinkHref","size","useState","setMovie","movieId","useParams","useLocation","useEffect","API","then","catch","console","log","Suspense","fallback","Loading"],"sourceRoot":""}