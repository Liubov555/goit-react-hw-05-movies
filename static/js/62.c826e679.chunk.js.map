{"version":3,"file":"static/js/62.c826e679.chunk.js","mappings":"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","sources":["API/Api.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/MovieSearch/MovieSearch.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst KEY = '2e428f3596d4dd04f259d44f78cbc4cd';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst URL_POSTER = 'https://image.tmdb.org/t/p/w500';\nconst URL_BACKDROP = 'https://image.tmdb.org/t/p/original/';\nconst LOGO_URL = `https://image.tmdb.org/t/p/w185`;\n\nexport { KEY, BASE_URL, URL_POSTER, URL_BACKDROP, LOGO_URL };\n\nexport const getTrandingMovies = async () => {\n    const response = await axios.get(\n        `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMovieById = async id => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMovieCast = async id => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n    margin-bottom: 25px;\n`;\n\nexport const Item = styled.li`\n    display: block;\n    &:not(:last-child){\n        margin-bottom: 10px;\n    }\n`;\n\nexport const LinkItem = styled(Link)`\n    color: #888888;\n\n &:hover, :focus{\ncolor: black;\n    }\n\n`;\n\nexport const List = styled.ul`\n    padding: 0;\n`","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Title, List, Item, LinkItem } from './MovieList.styled';\n\n\nconst MoviesList = ({ movies, titlePage = null }) => {\n    const location = useLocation();\n\n    return (\n        <>\n            {titlePage && <Title>{titlePage}</Title>}\n\n            <List>\n                {movies.map(({ id, title, name }) => (\n                    <Item key={id}>\n                        <LinkItem\n                            to={`/movies/${id}`}\n                            state={{ from: location }}\n                        >\n                            {title || name}\n                        </LinkItem>\n                    </Item>\n                ))}\n            </List>\n        </>\n    );\n};\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n            name: PropTypes.string,\n        }).isRequired\n    ),\n    titlePage: PropTypes.string,\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../../API/Api';\nimport MoviesList from '../../components/MovieList/MovieList';\nimport Loading from '../../components/Loading/Loading';\n\n\nconst MovieSearch = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n\n    const [movies, setMovie] = useState(null);\n    const [totalRezultMovie, setTotalRezMovie] = useState(null);\n    const [showLoading, setShowLoading] = useState(false);\n    const [inputSearch, setInputSearch] = useState(query);\n\n    useEffect(() => {\n        if (query === '') return;\n\n        setMovie(null);\n        setTotalRezMovie(null);\n        setShowLoading(true);\n\n        API.getMoviesQuery(query)\n            .then(data => {\n                setMovie(data.results);\n                setTotalRezMovie(data.total_results);\n                setShowLoading(false);\n            })\n            .catch(console.log);\n    }, [query]);\n\n    const handleInputChange = e => {\n        setInputSearch(e.currentTarget.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.target;\n        const queryNormalized = form.query.value.toLowerCase().trim();\n\n        setSearchParams({ query: queryNormalized });\n\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"query\"\n                    value={inputSearch}\n                    onChange={handleInputChange}\n                    placeholder=\"Enter movie name\"\n                />\n\n                <button type=\"submit\">\n                    Search\n                </button>\n            </form>\n\n            {showLoading && <Loading />}\n            {movies && <MoviesList movies={movies} />}\n\n            {totalRezultMovie === 0 && <div>Not found movies</div>}\n        </>\n    );\n};\n\nexport default MovieSearch;"],"names":["KEY","BASE_URL","getTrandingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","Title","styled","Item","LinkItem","Link","List","movies","titlePage","location","useLocation","map","title","name","to","state","from","useSearchParams","searchParams","setSearchParams","get","useState","setMovie","totalRezultMovie","setTotalRezMovie","showLoading","setShowLoading","inputSearch","setInputSearch","useEffect","API","then","total_results","catch","console","log","onSubmit","e","preventDefault","queryNormalized","target","value","toLowerCase","trim","type","onChange","currentTarget","placeholder"],"sourceRoot":""}